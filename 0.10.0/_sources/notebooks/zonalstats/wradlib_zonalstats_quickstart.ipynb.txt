{
 "metadata": {
  "celltoolbar": "Slideshow",
  "kernelspec": {
   "display_name": "Python 2",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.12"
  },
  "livereveal": {
   "scroll": true
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "metadata": {
      "nbsphinx": "hidden",
      "slideshow": {
       "slide_type": "skip"
      }
     },
     "source": [
      "This notebook is part of the $\\omega radlib$ documentation: http://wradlib.org/wradlib-docs.\n",
      "\n",
      "Copyright (c) 2016, $\\omega radlib$ developers.\n",
      "Distributed under the MIT License. See LICENSE.txt for more info."
     ]
    },
    {
     "cell_type": "heading",
     "level": 1,
     "metadata": {
      "slideshow": {
       "slide_type": "slide"
      }
     },
     "source": [
      "A quick start to zonal statistics "
     ]
    },
    {
     "cell_type": "markdown",
     "metadata": {
      "slideshow": {
       "slide_type": "fragment"
      }
     },
     "source": [
      "Zonal statistics can be used to compute e.g. the areal average precipitation over a catchment."
     ]
    },
    {
     "cell_type": "markdown",
     "metadata": {
      "slideshow": {
       "slide_type": "fragment"
      }
     },
     "source": [
      "Here, we show a brief example using RADOLAN composite data from the German Weather Service (DWD)."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": true,
     "input": [
      "import wradlib as wrl\n",
      "import matplotlib.pyplot as pl\n",
      "import matplotlib as mpl\n",
      "import warnings\n",
      "warnings.filterwarnings('ignore')\n",
      "try:\n",
      "    get_ipython().magic(\"matplotlib inline\")\n",
      "except:\n",
      "    pl.ion()\n",
      "import numpy as np\n",
      "from osgeo import osr"
     ],
     "language": "python",
     "metadata": {
      "slideshow": {
       "slide_type": "slide"
      }
     },
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {
      "slideshow": {
       "slide_type": "slide"
      }
     },
     "source": [
      "Preparing the RADOLAN data"
     ]
    },
    {
     "cell_type": "markdown",
     "metadata": {
      "slideshow": {
       "slide_type": "fragment"
      }
     },
     "source": [
      "Preparing the radar composite data includes to\n",
      "- read the data,\n",
      "- geoference the data in native RADOLAN projection,\n",
      "- reproject the data to Germany Zone 2 projection."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": true,
     "input": [
      "# Read and preprocess the RADOLAN data\n",
      "fpath = 'radolan/misc/raa01-sf_10000-1406100050-dwd---bin.gz'\n",
      "f = wrl.util.get_wradlib_data_file(fpath)\n",
      "data, attrs = wrl.io.read_RADOLAN_composite(f, missing=np.nan)\n",
      "sec = attrs['secondary']\n",
      "data.flat[sec] = np.nan"
     ],
     "language": "python",
     "metadata": {
      "slideshow": {
       "slide_type": "fragment"
      }
     },
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": true,
     "input": [
      "# Get RADOLAN grid coordinates (lon/lat)\n",
      "grid_xy_radolan = wrl.georef.get_radolan_grid(900, 900)\n",
      "x_radolan = grid_xy_radolan[:, :, 0]\n",
      "y_radolan = grid_xy_radolan[:, :, 1]"
     ],
     "language": "python",
     "metadata": {
      "slideshow": {
       "slide_type": "fragment"
      }
     },
     "outputs": [],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# This is the native RADOLAN projection\n",
      "# (polar stereographic projection)\n",
      "proj_stereo = wrl.georef.create_osr(\"dwd-radolan\")\n",
      "\n",
      "# This is our target projection (Germany Zone 2)\n",
      "proj_gk = osr.SpatialReference()\n",
      "_ = proj_gk.ImportFromEPSG(31466)"
     ],
     "language": "python",
     "metadata": {
      "slideshow": {
       "slide_type": "fragment"
      }
     },
     "outputs": [],
     "prompt_number": 4
    },
    {
     "cell_type": "code",
     "collapsed": true,
     "input": [
      "# Reproject the RADOLAN coordinates\n",
      "xy = wrl.georef.reproject(grid_xy_radolan,\n",
      "                          projection_source=proj_stereo,\n",
      "                          projection_target=proj_gk)"
     ],
     "language": "python",
     "metadata": {
      "slideshow": {
       "slide_type": "fragment"
      }
     },
     "outputs": [],
     "prompt_number": 5
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {
      "slideshow": {
       "slide_type": "slide"
      }
     },
     "source": [
      "Import catchment boundaries from ESRI shapefile"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Open shapefile (already in GK2)\n",
      "shpfile = wrl.util.get_wradlib_data_file(\n",
      "    'shapefiles/agger/agger_merge.shp')\n",
      "dataset, inLayer = wrl.io.open_shape(shpfile)\n",
      "cats, keys = wrl.georef.get_shape_coordinates(inLayer)\n",
      "print(\"Found %d sub-catchments in shapefile.\" % len(cats))"
     ],
     "language": "python",
     "metadata": {
      "slideshow": {
       "slide_type": "fragment"
      }
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Found 13 sub-catchments in shapefile.\n"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {
      "slideshow": {
       "slide_type": "slide"
      }
     },
     "source": [
      "Clip subgrid from RADOLAN grid "
     ]
    },
    {
     "cell_type": "markdown",
     "metadata": {
      "slideshow": {
       "slide_type": "fragment"
      }
     },
     "source": [
      "This is just to speed up the computation (so we don't have to deal with the full grid)."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": true,
     "input": [
      "bbox = inLayer.GetExtent()\n",
      "buffer = 5000.\n",
      "bbox = dict(left=bbox[0] - buffer, right=bbox[1] + buffer,\n",
      "            bottom=bbox[2] - buffer, top=bbox[3] + buffer)\n",
      "mask, shape = wrl.zonalstats.mask_from_bbox(xy[..., 0], \n",
      "                                            xy[..., 1],\n",
      "                                            bbox)\n",
      "xy_ = np.dstack((xy[..., 0][mask].ravel(), xy[..., 1][mask].ravel()))\n",
      "data_ = data[mask]"
     ],
     "language": "python",
     "metadata": {
      "slideshow": {
       "slide_type": "fragment"
      }
     },
     "outputs": [],
     "prompt_number": 7
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {
      "slideshow": {
       "slide_type": "slide"
      }
     },
     "source": [
      "Compute the average precipitation for each catchment"
     ]
    },
    {
     "cell_type": "markdown",
     "metadata": {
      "slideshow": {
       "slide_type": "fragment"
      }
     },
     "source": [
      "To compute the zonal average, we have to understand the the grid cells as *polygons* defined by a set of *vertices*."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": true,
     "input": [
      "# Create vertices for each grid cell\n",
      "# (MUST BE DONE IN NATIVE RADOLAN COORDINATES)\n",
      "grdverts = wrl.zonalstats.grid_centers_to_vertices(x_radolan[mask],\n",
      "                                                   y_radolan[mask], \n",
      "                                                   1., 1.)\n",
      "# And reproject to our target projection (here: GK2)\n",
      "grdverts = wrl.georef.reproject(grdverts,\n",
      "                                projection_source=proj_stereo,\n",
      "                                projection_target=proj_gk)"
     ],
     "language": "python",
     "metadata": {
      "slideshow": {
       "slide_type": "fragment"
      }
     },
     "outputs": [],
     "prompt_number": 8
    },
    {
     "cell_type": "markdown",
     "metadata": {
      "slideshow": {
       "slide_type": "fragment"
      }
     },
     "source": [
      "Based on the overlap of these polygons with the catchment area, we can then compute a *weighted average*. "
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# This object collects our source and target data\n",
      "#   and computes the intersections\n",
      "zd = wrl.zonalstats.ZonalDataPoly(grdverts, cats, srs=proj_gk)\n",
      "\n",
      "# This object can actually compute the statistics\n",
      "obj = wrl.zonalstats.GridCellsToPoly(zd)\n",
      "\n",
      "# We just call this object with any set of radar data\n",
      "avg = obj.mean(data_.ravel())"
     ],
     "language": "python",
     "metadata": {
      "slideshow": {
       "slide_type": "fragment"
      }
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Calculate Intersection source/target-layers\n"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {
      "slideshow": {
       "slide_type": "slide"
      }
     },
     "source": [
      "Plot results in map"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from matplotlib.collections import PatchCollection\n",
      "from matplotlib.colors import from_levels_and_colors\n",
      "import matplotlib.patches as patches\n",
      "\n",
      "# Create discrete colormap\n",
      "levels=np.arange(0,30,2.5)\n",
      "colors = pl.cm.gist_heat(np.linspace(0, 1, len(levels)))\n",
      "mycmap, mynorm = from_levels_and_colors(levels, colors, extend=\"max\")\n",
      "\n",
      "fig = pl.figure(figsize=(10, 10))\n",
      "\n",
      "# Average rainfall sum\n",
      "ax = fig.add_subplot(121, aspect=\"equal\")\n",
      "patches = [patches.Polygon(item, True) for item in obj.zdata.trg.data]\n",
      "coll = PatchCollection(patches, array=avg, cmap=mycmap, norm=mynorm,\n",
      "                       edgecolors='white', lw=0.5)\n",
      "ax.add_collection(coll)\n",
      "pl.colorbar(coll, ax=ax, orientation=\"horizontal\", pad=0.05)\n",
      "pl.xlabel(\"GK2 Easting (m)\")\n",
      "pl.ylabel(\"GK2 Northing (m)\")\n",
      "pl.title(\"Catchment areal average\")\n",
      "pl.xlim(bbox[\"left\"], bbox[\"right\"])\n",
      "pl.ylim(bbox[\"bottom\"], bbox[\"top\"])\n",
      "pl.grid()\n",
      "\n",
      "# Original radar data\n",
      "ax = fig.add_subplot(122, aspect=\"equal\")\n",
      "pm = pl.pcolormesh(xy[:, :, 0], xy[:, :, 1], \n",
      "                   np.ma.masked_invalid(data),\n",
      "                   cmap=mycmap, norm=mynorm)\n",
      "wrl.vis.add_patches(ax=ax, patch_array=cats, \n",
      "                    facecolor=\"None\", edgecolor=\"white\")\n",
      "cb = pl.colorbar(pm, ax=ax, orientation=\"horizontal\", pad=0.05)\n",
      "cb.set_label(\"(mm/h)\")\n",
      "pl.xlabel(\"GK2 Easting (m)\")\n",
      "pl.ylabel(\"GK2 Northing (m)\")\n",
      "pl.title(\"RADOLAN rain depth\")\n",
      "pl.xlim(bbox[\"left\"], bbox[\"right\"])\n",
      "pl.ylim(bbox[\"bottom\"], bbox[\"top\"])\n",
      "pl.grid(color=\"white\")\n",
      "pl.tight_layout()"
     ],
     "language": "python",
     "metadata": {
      "slideshow": {
       "slide_type": "fragment"
      }
     },
     "outputs": [
      {
       "output_type": "display_data",
       "png": "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\nftxs61UbkpddFyel5t4lLwNj1srt8O67XNejzm1B2X3pEgCHlKZMGV0CNX/PeLRzUz/e6fUmI9PS\n1MbxnRAYre52Z+noSMK9e2yysOB4t24kPEcJsftnzQLAOlsoiKW1NRV9fQH4ZscOmnbtinvlyrz6\n1ltYWlkhhKD/55/zb0ICdRo21No5Ly8d9DKopNRuh/+cC4Zk4EB1vekN+UzCzg8eHh4MHTpUaz7K\n5MmTGTRoED179szVOAYyPcrVq1c3ipyFgdB1ARJCXAU6SynzHHEthLgORKH2ECyUUi4SQpxGHTvX\nAUgERkopg5VtvX+BK8AT4Bsp5UEhRAPUSvx1Zc7XgK+llG8KIaKllCU01ouSUpYUQvylnHNIGf8b\ntTejJWArpZyijI8DEqSUWdJQhRCDUXtJcHNzq7927dq8vvQsxMbG4qjcweeH9LQ0Hty6xdPIyALJ\noQtXT0+s0tN5eudOlnFrDw+Ss41pUqp6dWJNcNHINx4ekIv82rB1dycqMZHYaHVop5WNDaU9PbG0\nsQEpSUtLIzUtTWv3OhsbG6pWqcJtHTFzQgi9DEDXKlWIT0jg/v37Rm3wUb16da5fv56rh6x8+fLY\n2tpy/fp1vY1SDw8P7mR7/y0tLTMTOVIKWEZQCEGtWrWwsrIq0Dw5ofn9bdWqVUhGeIKpedl1sYer\na/1D27bp9Xpz2uD19PbmVg7JQ7o2hS0tLfGuW5eIu3d5EB6ulxx5mT+jToO1rS0VfX1JSUri3rlz\nWY5x9/YmKpv8TsrH3tqjIpalXIg/G4K9s6ZeEUTdf1bP2OjxdUnS46upbR6bbA7fJCUyzMbLm6TQ\niznOnf09kvb2lKlZk9unT5OemoqVnR1u1aphke27np6ezr8nT2YZcytbFteyZUlNSeHimTM5yu/i\n5kZCXFyWCiHamik5u7hQrmJFUlNTuXv3Lg+NVGLVxcWFihUrcvr06Rx1bKVKlShVqhQAly5d0mm8\nZuDt7Z0leU6lUmU2LDl16lSBk7br1q2LpaUlJ06cKNA8OaEpf8OGDY2ui/XZt4/Ij0JWaCqlvKds\n3e0RQlxS1iwJNAYaAuuFEJWBcMBTSvlYiXP7UwjhgzrWLju6rIqcztFrLinlImARQIMGDWTLli11\nLJc7gYGBFGSOuCdPWP7nn2yeM6dAcuhixenTrM5eeg0oHxDA7ZEjtZ5TyteXrkFBbOvSxeyqUGQg\n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\nAAAASUVORK5CYII=\n",
       "text": [
        "<matplotlib.figure.Figure at 0x7ff168054610>"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {
      "slideshow": {
       "slide_type": "slide"
      }
     },
     "source": [
      "Save time by reading the weights from a file"
     ]
    },
    {
     "cell_type": "markdown",
     "metadata": {
      "slideshow": {
       "slide_type": "fragment"
      }
     },
     "source": [
      "The computational expensive part is the computation of intersections and weights. You only need to do it *once*.\n",
      "\n",
      "You can dump the results on disk and read them from there when required. Let's do a little benchmark:"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import datetime as dt\n",
      "\n",
      "# dump to file\n",
      "zd.dump_vector('test_zonal_poly_cart')\n",
      "\n",
      "t1 = dt.datetime.now()\n",
      "# Create instance of type GridCellsToPoly from zonal data file\n",
      "obj = wrl.zonalstats.GridCellsToPoly('test_zonal_poly_cart')\n",
      "t2 = dt.datetime.now()\n",
      "\n",
      "# Create instance of type GridCellsToPoly from sratch\n",
      "zd = wrl.zonalstats.ZonalDataPoly(grdverts, cats, srs=proj_gk)\n",
      "obj = wrl.zonalstats.GridCellsToPoly(zd)\n",
      "t3 = dt.datetime.now()\n",
      "\n",
      "# Calling the object\n",
      "avg = obj.mean(data_.ravel())\n",
      "t4 = dt.datetime.now()\n",
      "\n",
      "print(\"\\nCreate object from file: %f seconds\" % (t2 - t1).total_seconds())\n",
      "print(\"Create object from sratch: %f seconds\" % (t3 - t2).total_seconds())\n",
      "print(\"Compute stats: %f seconds\" % (t4 - t3).total_seconds())"
     ],
     "language": "python",
     "metadata": {
      "slideshow": {
       "slide_type": "fragment"
      }
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Calculate Intersection source/target-layers\n",
        "\n",
        "Create object from file: 0.096645 seconds\n",
        "Create object from sratch: 2.576636 seconds\n",
        "Compute stats: 0.001368 seconds\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "code",
     "collapsed": true,
     "input": [],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 12
    }
   ],
   "metadata": {}
  }
 ]
}
